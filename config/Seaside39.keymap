#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

&lt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LEFT_ALT Q      &kp W  &kp E  &kp R        &kp T                                                            &kp Y        &kp U  &lt 0 I    &kp O         &mt RIGHT_CONTROL P
&mt LEFT_CONTROL A  &kp S  &kp D  &kp F        &kp G                                                            &kp H        &kp J  &kp K      &kp L         &mt RIGHT_ALT MINUS
&mt LEFT_SHIFT Z    &kp X  &kp C  &kp V        &kp B                                                            &kp N        &kp M  &kp COMMA  &lt 3 PERIOD  &mt RIGHT_SHIFT SLASH
&none               &none  &none  &lt 2 SPACE  &mt LEFT_ALT TAB  &mt LEFT_GUI BACKSPACE      &mt RIGHT_GUI TAB  &lt 1 ENTER                                  &none
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        ARROW {
            bindings = <
&mt LEFT_ALT NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4   &kp NUMBER_5                                       &kp NUMBER_6       &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9        &mt RIGHT_CONTROL NUMBER_0
&kp LEFT_CONTROL       &none         &kp DELETE    &kp BACKSPACE  &kp GRAVE                                          &kp LEFT_ARROW     &kp DOWN      &kp UP_ARROW  &kp RIGHT           &mt RIGHT_ALT EQUAL
&kp LEFT_SHIFT         &none         &none         &none          &kp LEFT_BRACKET                                   &kp RIGHT_BRACKET  &tog 2        &kp SEMI      &lt 3 SINGLE_QUOTE  &mt RIGHT_SHIFT BACKSLASH
&trans                 &trans        &trans        &trans         &trans            &mt LEFT_GUI DELETE      &trans  &trans                                                             &trans
            >;
        };

        FUNCTION {
            bindings = <
&mt LEFT_ALT F1      &kp F2   &kp F3   &kp F4  &kp F5                                      &mkp MB4      &kp PG_UP  &kp PG_DN  &kp HOME  &mt RIGHT_GUI END
&mt LEFT_CONTROL F6  &kp F7   &kp F8   &kp F9  &kp F10                                     &lt 4 ESCAPE  &mkp MB1   &mkp MB3   &mkp MB2  &kp RIGHT_ALT
&kp LEFT_SHIFT       &kp F11  &kp F12  &none   &none                                       &mkp MB5      &tog 2     &to 3      &mo 3     &kp RIGHT_SHIFT
&trans               &trans   &trans   &trans  &trans   &trans      &mt RIGHT_CONTROL TAB  &trans                                        &trans
            >;
        };

        MEDIA {
            bindings = <
&kp LEFT_ALT      &none       &none     &none       &none                       &none              &none           &none            &none            &kp RIGHT_CONTROL
&kp LEFT_CONTROL  &kp C_PREV  &kp C_PP  &kp C_NEXT  &none                       &kp LEFT_ARROW     &kp DOWN_ARROW  &kp UP_ARROW     &kp RIGHT_ARROW  &kp RIGHT_ALT
&kp LEFT_SHIFT    &none       &none     &none       &none                       &kp C_VOLUME_DOWN  &kp K_MUTE      &kp C_VOLUME_UP  &trans           &kp RIGHT_SHIFT
&trans            &trans      &trans    &trans      &trans  &trans      &trans  &kp BACKSPACE                                                        &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        BLE {
            bindings = <
&none         &none         &none         &none         &none                           &none  &none  &none  &none  &bt BT_CLR_ALL
&none         &none         &none         &none         &none                           &none  &none  &none  &none  &none
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &none  &none  &none  &none  &none
&trans        &trans        &trans        &bt BT_CLR    &none         &none      &none  &none                       &trans
            >;
        };
    };
};
